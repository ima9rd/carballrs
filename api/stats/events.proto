syntax = "proto2";

import "api/player_id.proto";

package api.stats;

message BallData {
    optional float pos_x = 1;
    optional float pos_y = 2;
    optional float pos_z = 3;
}

message Hit {
    optional int32 frame_number = 1;
    optional api.PlayerId player_id = 2;
    optional float collision_distance = 3;
    optional BallData ball_data = 4;

    // Derived values
    optional bool pass_ = 5;
    optional bool passed = 6;
    optional bool dribble = 7;
    optional bool dribble_continuation = 8;
    optional bool shot = 9;
    optional bool goal = 10;

    optional bool assist = 12;
    optional bool assisted = 13;
    optional bool save = 14;
    optional bool aerial = 15; // ball is above 800 units
    optional bool on_ground = 16; // TODO: CALCULATE
    optional float distance = 17;
    optional float distance_to_goal = 18;

    optional int32 previous_hit_frame_number = 19;
    optional int32 next_hit_frame_number = 20;

    // What goal number this hit belongs to:
    // it starts at 0 and counts up,  -1 means no more kickoffs will happen.
    optional int32 goal_number = 21;

    // True if this hit is detected as the first hit for a kickoff.
    optional bool is_kickoff = 22;

    // pseudo stats
    // is_turnover = !(goal || dribble || pass)

    // DEPRECATED STATS
    optional bool DEPRECATED_field_goal_number = 11;
}

// Not Implemented
message Bump {
    optional int32 frame_number = 1;
    optional api.PlayerId attacker_id = 2;
    optional api.PlayerId victim_id = 3;
    optional bool is_demo = 4;
}

// Not Implemented
message CameraChange {
    optional int32 frame_number = 1;
    optional api.PlayerId player_id = 2;
    optional float distance_from_ball = 3;
    optional bool is_in_possession = 4; // True if the player making the change has possession of the ball
    optional float length_in_this_mode = 5;
    optional bool is_on_ball_cam = 6;
}

// Not Implemented
message FiftyFifty {
    optional int32 frame_number = 1;
    repeated api.PlayerId players = 2;
    optional bool is_kickoff = 3;
    optional api.PlayerId winning_player = 4;
}

message Kickoff {
    optional int32 start_frame_number = 1;
    optional int32 end_frame_number = 2;
}
