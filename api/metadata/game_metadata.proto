syntax = "proto2";

import "api/player_id.proto";

package api.metadata;

enum Playlist {
	UNKNOWN = 0;
	UNRANKED_DUELS = 1;
	UNRANKED_DOUBLES = 2;
	UNRANKED_STANDARD = 3;
	UNRANKED_CHAOS = 4;
	CUSTOM_LOBBY = 6;
	OFFLINE_SPLITSCREEN = 8;
	RANKED_DUELS = 10;
	RANKED_DOUBLES = 11;
	RANKED_SOLO_STANDARD = 12;
	RANKED_STANDARD = 13;
	UNRANKED_SNOW_DAY = 15;
	ROCKET_LABS = 16;
	UNRANKED_HOOPS = 17;
	UNRANKED_RUMBLE = 18;
	TOURNAMENT = 22;
	UNRANKED_DROPSHOT = 23;
	ANNIVERSARY = 25;
	RANKED_HOOPS = 27;
	RANKED_RUMBLE = 28;
	RANKED_DROPSHOT = 29;
	RANKED_SNOW_DAY = 30;
}

message GameScore {
    optional int32 team_0_score = 1;
    optional int32 team_1_score = 2;
}

message Goal {
    optional int32 frame_number = 1;
    optional api.PlayerId player_id = 2;
}

message Demo {
    optional int32 frame_number = 1;
    optional api.PlayerId attacker_id = 2;
    optional api.PlayerId victim_id = 3;
}

message GameMetadata {
    optional string id = 1;
    optional string name = 2;
    optional string map = 3;
    optional int32 version = 4;
    optional int64 time = 5;
    optional int32 frames = 6;
    optional GameScore score = 7;
    repeated Goal goals = 9;
    repeated Demo demos = 10;
    optional PlayerId primary_player = 11; // Player who saved the replay locally
    optional float length = 12;
    optional string game_server_id = 13;
    optional string server_name = 14;
    optional string match_guid = 15;
    optional int32 team_size = 16;
	optional Playlist playlist = 17;
    optional bool is_invalid_analysis = 18; // True if we did not perform a full analysis on the replay.
}
